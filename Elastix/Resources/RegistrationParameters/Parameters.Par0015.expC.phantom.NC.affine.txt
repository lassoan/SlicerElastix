// ********** Image Types

(FixedInternalImagePixelType "float")
(MovingInternalImagePixelType "float")

// ********** Components

(Registration "MultiResolutionRegistration")
(FixedImagePyramid "FixedRecursiveImagePyramid")
(MovingImagePyramid "MovingRecursiveImagePyramid")
(Interpolator "BSplineInterpolator")
(Metric "AdvancedNormalizedCorrelation")
(Optimizer "AdaptiveStochasticGradientDescent")
(ResampleInterpolator "FinalBSplineInterpolator")
//(Resampler "DefaultResampler")
(Resampler "CUDAResampler")
(Transform "AffineTransform")


// ********** Pyramid

// Total number of resolutions
(NumberOfResolutions 5)
//(ImagePyramidSchedule 16 16 8 8 8 4 4 4 2 2 2 1 1 1 1)


// ********** Transform

(AutomaticScalesEstimation "true")
(AutomaticTransformInitialization "true")
(HowToCombineTransforms "Compose")

//Save composite ITK transform
(ITKTransformOutputFileNameExtension "h5")
(WriteITKCompositeTransform "true")


// ********** Optimizer

// Maximum number of iterations in each resolution level:
(MaximumNumberOfIterations 2000)

(AutomaticParameterEstimation "true")
(UseAdaptiveStepSizes "true")


// ********** Metric


// ********** Several

(WriteTransformParametersEachIteration "false")
(WriteTransformParametersEachResolution "true")
(WriteResultImageAfterEachResolution "true")
//(WriteResultImage "false")
(WriteResultImage "true")
(ShowExactMetricValue "false")
(ErodeMask "false")


// ********** ImageSampler

//Number of spatial samples used to compute the mutual information in each resolution level:
(ImageSampler "RandomCoordinate")
(NumberOfSpatialSamples 2000)
(NewSamplesEveryIteration "true")
(UseRandomSampleRegion "false")
(MaximumNumberOfSamplingAttempts 5)


// ********** Interpolator and Resampler

//Order of B-Spline interpolation used in each resolution level:
(BSplineInterpolationOrder 1)

//Order of B-Spline interpolation used for applying the final deformation:
(FinalBSplineInterpolationOrder 3)

//Default pixel value for pixels that come from outside the picture:
(DefaultPixelValue 0)

(UseCUDA "true")
